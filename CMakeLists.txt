# == DO NOT EDIT THE FOLLOWING LINES for the Raspberry Pi Pico VS Code Extension to work ==
if(WIN32)
    set(USERHOME $ENV{USERPROFILE})
else()
    set(USERHOME $ENV{HOME})
endif()
set(sdkVersion 2.1.1)
set(toolchainVersion 14_2_Rel1)
set(picotoolVersion 2.1.1)
set(picoVscode ${USERHOME}/.pico-sdk/cmake/pico-vscode.cmake)
if (EXISTS ${picoVscode})
    include(${picoVscode})
endif()
# ====================================================================================
set(PICO_BOARD pico CACHE STRING "Board type")

set(PROJECT Midi)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
cmake_minimum_required(VERSION 3.12)
include($ENV{PICO_SDK_PATH}/external/pico_sdk_import.cmake)
project(${PROJECT} C CXX ASM)
pico_sdk_init()
#add_executable(${PROJECT} main.c midi.c display.c)
add_executable(${PROJECT} main.c)
add_subdirectory(${CMAKE_CURRENT_LIST_DIR}/pio_midi_uart_lib)
add_subdirectory(${CMAKE_CURRENT_LIST_DIR}/ring_buffer_lib)
target_include_directories(${PROJECT} PRIVATE ${CMAKE_CURRENT_LIST_DIR}/pio_midi_uart_lib)
target_include_directories(${PROJECT} PRIVATE ${CMAKE_CURRENT_LIST_DIR}/ring_buffer_lib)
pico_generate_pio_header(${PROJECT} ${CMAKE_CURRENT_LIST_DIR}/pio_midi_uart_lib/pio_midi_uart.pio OUTPUT_DIR ${CMAKE_CURRENT_LIST_DIR}/generated)
pico_generate_pio_header(${PROJECT} ${CMAKE_CURRENT_LIST_DIR}/segment.pio OUTPUT_DIR ${CMAKE_CURRENT_LIST_DIR}/generated)
pico_generate_pio_header(${PROJECT} ${CMAKE_CURRENT_LIST_DIR}/pgm.pio OUTPUT_DIR ${CMAKE_CURRENT_LIST_DIR}/generated)
target_link_libraries(${PROJECT} pico_stdlib pico_multicore hardware_pio hardware_adc pio_midi_uart_lib ring_buffer_lib)
target_compile_options(${PROJECT} PRIVATE -Wall -Wextra)
pico_enable_stdio_usb(${PROJECT} 0)
pico_enable_stdio_uart(${PROJECT} 0)
pico_add_extra_outputs(${PROJECT} 1)
